# Import from csv to provider nodes
#
# @see https://www.drupal.org/docs/8/api/migrate-api/migrate-source-plugins/migrating-data-from-a-csv-source
# @see https://www.drupal.org/project/drupal/issues/2949564
# @see https://virtuoso-performance.com/blog/vpadmin/importing-specific-fields-overwriteproperties
# @see https://www.mtech-llc.com/blog/ada-hernandez/entity-lookup-generate-migrate-process-plugins
#
id: uwm_edw_puma_provider_flags
label: 'uwm_edw_puma_provider_flags - Migration for special PUMA csv data, which updates matching provider fields.'
migration_group: uwm
dependencies: {}

destination:
  plugin: entity:node

source:
  plugin: 'csv'
  path: 'private://imports/uwm-provider-flags.csv'

  # Column delimiter.
  delimiter: ','

  # Field enclosure.
  # enclosure: '"'

  # The number of rows at the beginning which are not data.
  header_row_count: 1

  # The column(s) to use as a key. Each column specified will
  # create an index in the migration table and too many columns
  # may throw an index size error.

  # (3.x version?)
  # ids:
  #   - npi

  # (2.x version?)
  # Specify the keys that make each row unique. If we only used the leading column,
  # subsequent rows would get skipped so, let's include the needed columns here.
  keys:
    - _puma_identifier
    - is_internal
    - _date_queried

  # Here we identify the columns of interest in the source file.
  # Each numeric key is the 0-based index of the column.
  # For each column, the key below is the field name assigned to
  # the data on import, to be used in field mappings below.
  # The value is a user-friendly string for display by the
  # migration UI.

  # (3.x version?)
  # fields:
  #   0:
  #     name: title
  #     label: 'Title of in source csv article row'
  #   [etc]

  # (2.x version?)
  # To make the CSV column values available for our
  # migrate process plugin, we name them here.
  column_names:
    - _puma_identifier: _puma_identifier
    - is_internal: is_internal
    - _date_queried: _date_queried


  fields:
    _puma_identifier: _puma_identifier
    is_internal: is_internal
    _date_queried: _date_queried


process:

  # Node ID
  # Map `nid` to look up existing provider node by NPI.
  nid:
    - plugin: entity_lookup
      source: _puma_identifier
      entity_type: node
      bundle_key: type
      bundle: res_provider
      value_key: field_res_puma_id
    - plugin: skip_on_empty
      method: row

  type:
    plugin: default_value
    default_value: res_provider

  # field_puma_is_internal: is_internal
  field_puma_is_internal:
    - plugin: skip_on_empty
      source: is_internal
      method: row
    - plugin: static_map
      map:
        'Yes': 1
        'Y': 1
        'No': 0
        'N': 0

  new_revision: false
#  entity_type: node
#  bundle_key: type
#  bundle: res_provider

