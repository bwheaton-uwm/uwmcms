<?php

/**
 * @file
 * Custom module for small, utility-type routines.
 *
 * Creates a snippet for use in search results. Allows creating a consistent
 * snippet that's available to our search-page views, based on the node type
 * or a node's fields.
 */

use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;
use Drupal\Component\Utility\Unicode;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_ENTITY_TYPE_load().
 */
function uwmcs_search_teaser_node_load($entities) {
  $i = 0;
}

/**
 * Implements hook_entity_view().
 */
function uwmcs_search_teaser_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  $i = 0;
}

/**
 * Implements hook_entity_prepare_view().
 */
function uwmcs_search_teaser_entity_prepare_view($entity_type_id, array $entities, array $displays, $view_mode) {
  $i = 0;
}

/**
 * Implements template_preprocess_views_view_fields().
 */
function uwmcs_search_teaser_preprocess_views_view_fields(&$variables) {

  $viewId = $variables['view']->id();
  $row = $variables['row'];

  if (stripos($viewId, 'search') !== FALSE) {

    if (!empty($row->_object) && method_exists($row->_object, 'get')) {

      $nid = $row->_object->get('nid')->value;
      $node = \Drupal::entityTypeManager()->getStorage('node')->load($nid);

      if ($node instanceof Node) {

        $renderArray = \Drupal::entityTypeManager()
          ->getViewBuilder('node')
          ->view($node, 'search_result');

        $variables['row']->uwmcs_search_teaser = $renderArray;
        $variables['row']->uwmcs_search_teaser_rendered = render($renderArray);
        $variables['row']->uwmcs_search_teaser_raw = _uwmcs_search_teaser_trim(NULL, $renderArray);
        $str = _uwm_get_search_teaser_string($node);
        $variables['row']->uwmcs_search_teaser_by_fields_raw = _uwmcs_search_teaser_trim($str);

        if ($node->getType() === "res_clinic" && !empty($node->body->value)) {

          /***
           * Add a trailing "." to the body's first '<h2>':
           */
          $body = $node->body->value;

          $pos = strpos($body, '</h2>');
          if ($pos !== FALSE) {
            $newstring = substr_replace($body, '. </h2>', $pos, strlen('</h2>'));
            if (!empty($newstring)) {
              $variables['row']->uwmcs_search_teaser_raw = _uwmcs_search_teaser_trim($newstring);
            }
          }

        }
        elseif ($node->getType() === "uwm_medical_service" || $node->getType() === "uwm_medical_specialty") {
          if ($node->hasField('field_meta_tags')) {
            if ($node->field_meta_tags->value) {
              $meta_tags = unserialize($node->field_meta_tags->value);
              if ($meta_tags['description']) {
                $meta_description = $meta_tags['description'];
                $variables['row']->uwmcs_search_teaser_raw = _uwmcs_search_teaser_trim($meta_description);
              }
            }
          }
        }
      }
    }
  }
}

/**
 * Description here.
 *
 * @param object|null $node
 *   Description here.
 *
 * @return string
 *   Description here.
 */
function _uwm_get_search_teaser_string(Node $node = NULL) {

  // Make sure it's a node.
  if ($node instanceof NodeInterface) {

    if ($node->getType() === "res_clinic") {

      return $node->body->value;

    }

    if ($node->getType() === "â€Œres_provider") {

      // $renderArray = $node->field_res_biography->view('full');.
      return $node->field_res_biography->value;

    }

    if ($node->getType() === "uwm_medical_specialty" ||
        $node->getType() === "uwm_medical_service") {

      $str = '';
      $paragraphs = $node->field_uwm_sections->referencedEntities();
      foreach ($paragraphs as $ppg) {
        if (!empty($ppg->field_uwm_component) &&
            method_exists($ppg->field_uwm_component, 'view')) {
          // $fields[] = $ppg->field_uwm_component->value;.
          $renderArray = $ppg->field_uwm_component->view('full');
          $str .= render($renderArray);
        }
      }

      // $paragraph = \Drupal::entityTypeManager()
      // ->getStorage('paragraph')->load($id2[0]['target_id']);
      // $renderArray = \Drupal::entityTypeManager()
      // ->getViewBuilder('paragraph')->view($paragraph);
      return $str;

    }

    if ($node->getType() === "uwm_medical_service") {

      // $renderArray = $node->field_uwm_sections->view('full');
      // return _uwmcs_search_teaser_trim(NULL, $renderArray);.
    }
  }
}

/**
 * Description here.
 *
 * @param string|null $string
 *   Description here.
 * @param array|null $renderArray
 *   Description here.
 *
 * @return string
 *   Description here.
 */
function _uwmcs_search_teaser_trim(string $string = NULL, array $renderArray = NULL) {

  if (!$string && isset($renderArray)) {
    $string = render($renderArray);
  }

  $trimmed = trim(preg_replace('/\s+/S', ' ', strip_tags($string)));
  $trimmed_raw = Unicode::truncate($trimmed, 200, TRUE, TRUE);
  return $trimmed_raw ?: '';
}
