<?php

/**
 * @file
 * Hook implementations and basic functionality for uwmed_uwmcms_search.
 */

use Drupal\Core\Form\FormState;

/**
 * Implements hook_page_attachments_alter().
 *
 * Add libraries for search pages.
 */
function uwmed_uwmcms_search_page_attachments_alter(&$variables) {
  // Get the current path.
  $currentPath = \Drupal::service('path.current')->getPath();

  // Add the location search form library to the location search page.
  if (stripos($currentPath, '/search/locations') !== FALSE) {
    $variables['#attached']['library'][] = 'uwmed_uwmcms_search/location-search-form';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Customizes exposed forms for views.
 */
function uwmed_uwmcms_search_form_views_exposed_form_alter(&$form, $form_state, $form_id) {
  $storage = $form_state->getStorage();

  if (!isset($storage['view'])) {
    return;
  }

  $view = $storage['view'];

  switch ($view->id()) {
    case 'uwm_locations_geo_search':
      _uwmed_uwmcms_search_alter_locations_search_form($form, $form_state);
      break;
  }
}

/**
 * Implements hook_views_pre_view().
 */
function uwmed_uwmcms_search_views_pre_view($view, $display_id, &$args) {
  switch ($view->id()) {
    case 'uwm_locations_geo_search':
      _uwmed_uwmcms_search_views_pre_view_uwm_locations_geo_search($view, $display_id, $args);
      break;
  }
}

/**
 * Customize the locations search form.
 *
 * @param array $form
 *   The form.
 * @param \Drupal\Core\Form\FormState $form_state
 *   The form state.
 */
function _uwmed_uwmcms_search_alter_locations_search_form(array &$form, FormState $form_state) {

  $form['use_my_location'] = [

    '#type' => 'container',
    '#attributes' => ['class' => ['use-my-location']],

    // Add a button to calculate user coordinates.
    'uml_button' => [
      '#prefix' => '<div class="use-my-location__prefix">' . t('or') . '</div>',
      '#markup' => '<button class="use-my-location__button btn btn-cta btn-cta-link" type="button">' . t('Use my location') . '</button>',
      '#allowed_tags' => ['button'],
    ],

    // Add a hidden field to hold calculated user coordinates.
    'uml' => [
      '#type' => 'hidden',
      '#default_value' => \Drupal::request()->query->get('uml'),
      '#attributes' => ['class' => ['use-my-location__coordinates']],
    ],

    // Add a container for a status message.
    'uml_status' => [
      '#markup' => '<div class="use-my-location__status"></div>',
      '#allowed_tags' => ['div'],
    ],

  ];

  $form['location_address_keywords'] = [

    '#type' => 'container',
    '#attributes' => ['class' => ['location-address-keywords']],

    'l' => [

      '#type' => 'textfield',
      '#size' => 30,
      '#default_value' => \Drupal::request()->query->get('l'),
      '#attributes' => [
        'placeholder' => 'Enter a zip code, neighborhood or city...',
        'autocomplete' => 'off',

      ],
      '#field_suffix' => '<a href="#" class="toggle" role="button" id="lakDd" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fas fa-location-arrow"></i></a>
<div class="dropdown"><div class="dropdown-menu" aria-labelledby="lakDd"><a href="#">Use my location</a></div></div>
<div class="status-message"></div>',
    ],

  ];

  if (isset($form['s'])) {

    $form['s']['#attributes']['class'][] = 'dm-form-item-collection';
    $form['s']['#attributes']['autocomplete'] = 'off';

    $form['s']['#weight'] = -10;
    $form['location_address_keywords']['#weight'] = -9;

  }

}

/**
 * Alter the uwm_locations_geo_search view in the pre_view phase.
 */
function _uwmed_uwmcms_search_views_pre_view_uwm_locations_geo_search($view, $display_id, $args) {
  $exposed_input = $view->getExposedInput();

  // If the Use My Location coordinates are available, use them for
  // the distance filter.
  if (!empty($exposed_input['uml'])) {
    $distance_filter = $view->getHandler($display_id, 'filter', 'field_coordinates_geofield_latlong');
    if ($distance_filter) {
      $distance_filter['value']['value'] = $exposed_input['uml'];
      $view->setHandler($display_id, 'filter', 'field_coordinates_geofield_latlong', $distance_filter);
    }
  }
}
