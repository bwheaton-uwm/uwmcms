<?php

/**
 * @file
 * General functionality and hook implementations for fields.
 */

use Drupal\Core\Url;

/**
 * Implements hook_preprocess_HOOK() for image formatter templates.
 *
 * Adds a link to an image, when appropriate.
 */
function uwmcms_chew_fields_preprocess_image_formatter(&$variables) {
  if (!isset($variables['item'])) {
    return;
  }
  $image_item = $variables['item'];


  // Get the media entity to which this image belongs, if there is one.
  $image_item_parent = $image_item->getParent();
  if (!isset($image_item_parent)) {
    return;
  }
  if (!method_exists($image_item_parent, 'getEntity')) {
    return;
  }
  $media_entity = $image_item_parent->getEntity();
  if (!isset($media_entity)) {
    return;
  }

  // Get the entity reference item.
  $entity_reference_item = $media_entity->_referringItem;
  if (!isset($entity_reference_item)) {
    return;
  }

  // Get the node entity to which this media entity belongs, if there is one.
  $entity_reference_item_parent = $entity_reference_item->getParent();
  if (!isset($entity_reference_item_parent)) {
    return;
  }
  if (!method_exists($entity_reference_item_parent, 'getEntity')) {
    return;
  }
  $node = $entity_reference_item_parent->getEntity();
  if (!isset($node)) {
    return;
  }

  // Get the node ID.
  $nid = $node->id();

  // Make sure this isn't the node currently being viewed.
  if (_uwmcms_chew_fields_current_node_page($nid)) {
    return;
  }

  // Get the node type.
  $type = $node->getType();

  switch ($type) {
    case 'promotion':
      // Get the link.
      $link_field = $node->get('field_link');
      if (!empty($link_field)) {
        $link = $link_field->first()->getValue();
        if (!empty($link['uri'])) {
          $variables['url'] = URL::fromUri($link['uri']);
        }
      }
      break;
    case 'article':
      $variables['url'] = Url::fromRoute('entity.node.canonical', ['node' => $nid]);
      break;
  }
}

/**
 * @param integer $nid
 *   The ID of the node to check.
 *
 * @return bool
 *   If this is the node currently being viewed.
 */
function _uwmcms_chew_fields_current_node_page($nid) {
  $match = FALSE;

  // Get the current path.
  $path = \Drupal::service('path.current')->getPath();

  if(preg_match('/node\/(\d+)/', $path, $matches)) {
    $path_nid = $matches[1];
    // If this is the node currently being viewed.
    if ($nid == $path_nid) {
      $match = TRUE;
    }
  }

  return $match;
}
