{#
/**
 * @file
 * Theme implementation to display a Grid paragraph.
 *
 * Custom variables:
 * - style_as_cards: boolean; if any of the child paragraphs are either a Card
 *   type of paragraph or Card type of content block, style all as cards.
 *
 * @see template_preprocess_paragraph()
 * @see uwmbase_preprocess_paragraph__uwm_grid()
 */
#}
{{ attach_library('uwmbase/grid-paragraph') }}

{# The template default set classes. #}
{# Sets Paragraph ID as class. #}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    'paragraph--id--' ~ paragraph.id.value,
    'uwm-grid',
    use_column_dividers ? 'uwm-grid-column-dividers',
    add_container ? 'container-xl',
  ]
%}

{% if content.field_uwm_columns_per_row %}
  {% set number_columns = content.field_uwm_columns_per_row['#items'].getString() %}
  {% set grid_classes = "col-lg-" ~ 12 / number_columns ~ " col-sm-6" %}
{% endif %}

{#
  TODO: Bootstrap card deck places all cards in a single row, regardless of how
  many there are. Refactor so the cards case does not use the card deck, but the
  same logic as the general case - enabling the content author's choice in the
  "Number of columns" field to apply.
  This should be fairly minor styling changes; the key is to audit all existing
  content uses of Grids containing Cards to ensure the styling does not break
  and that the desired "Number of columns" is actually set.

  There is a backlog task:
  @see https://www.wrike.com/open.htm?id=354924642
#}
{% if style_as_cards %}
  <div {{ attributes.addClass(classes) }}>
    <div class="card-deck">
      {% for key, item in content.field_uwm_columns if key|first != '#' %}
        {{ item }}
      {% endfor %}
    </div>
  </div>
{% else %}
  <div {{ attributes.addClass(classes) }}>
    <div class="row">
      {% for key, item in content.field_uwm_columns if key|first != '#' %}
        <div class="uwm-grid__item {{ grid_classes }}">
          {{ item }}
        </div>
      {% endfor %}
    </div>
  </div>
{% endif %}
