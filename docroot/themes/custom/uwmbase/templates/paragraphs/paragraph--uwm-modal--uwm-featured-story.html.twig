{#
/**
 * @file
 * Theme implementation to display a Modal paragraph in Featured Story view
 * mode.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * Custom variables:
 * - cta_to_modal: boolean, whether a parent Featured Story has a CTA link to
 *   open the modal.
 *
 * @see template_preprocess_paragraph()
 * @see uwmbase_preprocess_paragraph__uwm_modal()
 */
#}

{#
  This library is built on the Bootstrap modal component.
  @see https://getbootstrap.com/docs/4.0/components/modal/
#}
{{ attach_library('uwmbase/modal-video') }}

{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'uwm-modal-video'
  ]
%}

{% set paragraph_id = 'modal-' ~ paragraph.id.value %}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}

      {#
        Render the play button and caption text, if there is not a CTA link
        provided by parent Featured Story to open the modal.
        @see uwmbase_preprocess_paragraph__uwm_featured_story()
        @see uwmbase_preprocess_paragraph__uwm_modal()
      #}
      {% if not cta_to_modal %}
        <div class="uwm-modal-video__display" data-toggle="modal" data-target="#{{ paragraph_id }}">
          <div class="uwm-modal-video__button">
            <span class="fa-stack fa-2x">
              <i class="far fa-circle fa-stack-2x faa-burst animated"></i>
              <i class="fas fa-play fa-stack-1x"></i>
            </span>
          </div>

          {{ content.uwm_text }}
        </div>
      {% endif %}

      <div class="modal" id="{{ paragraph_id }}" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
          <div class="modal-content">

            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>

            <div class="modal-body">
              {{ content.field_uwm_media }}
            </div>

          </div>
        </div>
      </div>
    {% endblock %}
  </div>
{% endblock paragraph %}
