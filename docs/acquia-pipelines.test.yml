# For more acquia-pipelines.yml pipelines examples, see
# https://docs.acquia.com/acquia-cloud/develop/pipelines/yaml/examples/

# Must have a value of at least 1.0.0
# Version: 1.1.0
#   Enables users to use a custom PHP version other than the default version.
#   For default and supported PHP versions, see
#   https://docs.acquia.com/acquia-cloud/develop/pipelines/yaml/#php7
#   Note: As PHP is available by default, user need not mention 'php' as
#   a service unless a custom PHP version is required.
# Version: 1.2.0
#   Adds support for the 'cde-databases' key in your YAML file.
# Version: 1.3.0
#   Adds memcached support.
# For more info and supported versions, see
# https://docs.acquia.com/acquia-cloud/develop/pipelines/yaml/#version-key
version: 1.3.0

# For more info on services supported, see
# https://docs.acquia.com/acquia-cloud/develop/pipelines/yaml/#services-key
services:
  - mysql
  - php:
      version: 7.3
  - memcached

variables:
  global:
    WORKING_DIR: /mnt/tmp/local.prod/source


events:
  build:
    steps:
      - setup:
          script:
            - date
            - pwd
            - echo "Working dir is "
            - echo $WORKING_DIR
            - echo "Build dir is "
            - echo $BUILD_DIR
            - set -x
            - set +e
            - composer validate --no-check-all --ansi
            - composer install --no-progress
            - mysql -u root -proot -e "CREATE DATABASE drupal"
            - pwd
      - install-stevie-theme-components:
          script:
            - date
            - cd docroot/themes/custom/uwmbase
            - pwd
            - npm install --verbose
            # - npm install --verbose gulp-cli
            - node_modules/gulp-cli/bin/gulp.js
            - date
      - rm-text-files:
          script:
            - pwd
            - echo date > docroot/date.txt

  #  -deploy:
  #    steps:
  #      # Deploy the build artifact to a Cloud on-demand environment.
  #      - deploy:
  #          script:
  #            - pipelines-deploy
  ##            - chmod +x ./scripts/copy-files-pipeline.sh
  ##            - ./scripts/copy-files-pipeline.sh

  # When a GitHub pull request is merged, this deletes the coresponding ODE.
  pr-merged:
    steps:
      - deploy:
          script:
            - pipelines-deploy

  # When a GitHub pull request is closed, this deletes the coresponding ODE.
  pr-closed:
    steps:
      - deploy:
          script:
            - pipelines-deploy